name: Release and Publish PressyBar

on:
  workflow_dispatch:

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3
      - id: release
        name: 📦 Run release-please
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: simple
          package-name: pressybar
          token: ${{ secrets.GITHUB_TOKEN }}

  build-and-publish:
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: macos-latest
    env:
      VERSION: ${{ needs.release-please.outputs.version }}
      TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
    steps:
      - name: ⬇️ Checkout code at tag
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ env.TAG_NAME }}

      - name: 🛠 Install go-task
        run: brew install go-task/tap/go-task

      - name: 🏗 Build
        run: task build

      - name: 🏗 Build bundle
        run: task bundle

      - name: 🔄 Inject version into Info.plist
        run: |
          plist="Packages/PressyBar.app/Contents/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :CFBundleShortVersionString string $VERSION" "$plist" || \
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION" "$plist"
          /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string $VERSION" "$plist" || \
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $VERSION" "$plist"

      - name: 📦 Zip app
        run: |
          cd Packages
          zip -r PressyBar.zip PressyBar.app

      - name: 🚀 Upload asset to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.VERSION }}
          files: Packages/PressyBar.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
